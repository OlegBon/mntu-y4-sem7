import pandas as pd
import numpy as np
import os
import math

tasks = [
    {'name': 'task0', 'filename': 'pr4_task0_data.csv'},
    {'name': 'task1', 'filename': 'pr4_task1_data.csv'},
]

os.makedirs('results', exist_ok=True)

for task in tasks:
    print(f"\nüîÑ –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–¥–∞–Ω–Ω—è pr4_{task['name']}")

    data_path = os.path.join('data', task['filename'])
    result_path = os.path.join('results', f"pr4_{task['name']}_analysis-of-variance.md")

    df = pd.read_csv(data_path)

    # 1. –°–µ—Ä–µ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
    df["Sum"] = df.iloc[:, 1:5].sum(axis=1)
    df["Mean"] = df.iloc[:, 1:5].mean(axis=1)
    rep_sums = df.iloc[:, 1:5].sum(axis=0)
    rep_means = df.iloc[:, 1:5].mean(axis=0)
    grand_total = df["Sum"].sum()
    grand_mean = df["Mean"].mean()

    # –û–∫—Ä—É–≥–ª–µ–Ω–Ω—è –¥–ª—è –≤–∏–≤–æ–¥—É
    df_display = df.copy()
    df_display["Sum"] = df_display["Sum"].round(1)
    df_display["Mean"] = df_display["Mean"].round(1)
    rep_sums_display = rep_sums.round(1)

    rep_cols = df.columns[1:5]
    X = df.loc[:, rep_cols].astype(float)

    # 2. –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è: X = X ‚àí A
    A = grand_mean.round(0)
    transformed = df.loc[:, rep_cols] - A
    transformed["Œ£'"] = transformed.sum(axis=1)

    rep_sums_transformed = transformed.loc[:, rep_cols].sum(axis=0)
    total_row_sum = transformed["Œ£'"].sum()
    transformed.loc["‚àëP"] = list(rep_sums_transformed) + [total_row_sum]

    transformed_display = transformed.round(1)

    # 3. –ö–≤–∞–¥—Ä–∞—Ç–∏ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
    squared = transformed.loc[:, rep_cols] ** 2
    squared["Œ£¬≤"] = transformed.loc[:, rep_cols].sum(axis=1) ** 2

    rep_sums_for_P2 = transformed.loc["‚àëP", rep_cols].astype(float)
    rep_squares_for_P2 = rep_sums_for_P2 ** 2
    sum_of_squares_cols = rep_squares_for_P2.sum()

    sum_squared_P2_for_C = float(squared.loc["‚àëP", "Œ£¬≤"])

    # 4. –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω—å
    N = df.shape[0] * len(rep_cols)

    # 5. –ö–æ—Ä–µ–≥—É—é—á–∏–π —Ñ–∞–∫—Ç–æ—Ä
    C = sum_squared_P2_for_C / N

    # 6. –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤
    Cy = squared.loc[:df.shape[0]-1, rep_cols].sum().sum() - C

    # 7. –°—É–º–∞ –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—Å—Ç–µ–π
    Cp = rep_squares_for_P2.sum() / len(rep_cols) - C

    # 8. –°—É–º–∞ –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤ –¥–ª—è –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤
    Cv = squared["Œ£¬≤"].iloc[:df.shape[0]].sum() / len(rep_cols) - C

    # 9. –°—É–º–∞ –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤ –¥–ª—è –ø–æ—Ö–∏–±–∫–∏
    Cz = Cy - Cp - Cv

    # 10. –°—Ç–µ–ø–µ–Ω—ñ —Å–≤–æ–±–æ–¥–∏
    vy = N - 1
    vv = df.shape[0] - 1
    vp = len(rep_cols) - 1
    vz = vv * vp

    # 11‚Äì12. –î–∏—Å–ø–µ—Ä—Å—ñ—ó
    Sv = Cv / vv
    Sz = Cz / vz

    # 13. –ö—Ä–∏—Ç–µ—Ä—ñ–π –§—ñ—à–µ—Ä–∞
    Ff = Sv / Sz
    Ft = 3.86  # —Ç–∞–±–ª–∏—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è df1=3, df2=9

    # 14. –¢–∞–±–ª–∏—Ü—è –¥–∏—Å–ø–µ—Ä—Å—ñ–π–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É
    anova_table = pd.DataFrame({
        "–î–∂–µ—Ä–µ–ª–æ –≤–∞—Ä—ñ–∞—Ü—ñ—ó": ["–ó–∞–≥–∞–ª—å–Ω–∞", "–ü–æ–≤—Ç–æ—Ä–Ω–æ—Å—Ç–µ–π", "–í–∞—Ä—ñ–∞–Ω—Ç—ñ–≤", "–ü–æ—Ö–∏–±–∫–∏"],
        "–°—É–º–∞ –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤": [Cy, Cp, Cv, Cz],
        "–°—Ç–µ–ø–µ–Ω—ñ —Å–≤–æ–±–æ–¥–∏": [vy, vp, vv, vz],
        "–°–µ—Ä–µ–¥–Ω—ñ–π –∫–≤–∞–¥—Ä–∞—Ç": ["‚Äî", "‚Äî", f"{Sv:.2f}", f"{Sz:.2f}"],
        "F—Ñ": ["‚Äî", "‚Äî", f"{Ff:.2f}", "‚Äî"],
        "F—Ç": ["‚Äî", "‚Äî", f"{Ft:.2f}", "‚Äî"]
    })

    squared_display = squared.round(2)

    # 15. –ü–æ—Ö–∏–±–∫–∞ –¥–ª—è –¥–æ—Å–ª—ñ–¥—É
    Sx = math.sqrt(Sz / len(rep_cols))

    # 16. –ü–æ—Ö–∏–±–∫–∞ —Ä—ñ–∑–Ω–∏—Ü—ñ —Å–µ—Ä–µ–¥–Ω—ñ—Ö
    Sd = 1.41 * Sx

    # 17. –ù–∞–π–º–µ–Ω—à–∞ —ñ—Å—Ç–æ—Ç–Ω–∞ —Ä—ñ–∑–Ω–∏—Ü—è: HIP = t05 * Sd
    t05 = 2.26
    HIP = t05 * Sd

    # 18. –í–∏—Å–Ω–æ–≤–∫–∏: –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º (–≤–∞—Ä—ñ–∞–Ω—Ç 1)
    control_mean = df_display.loc[0, "Mean"]
    mean_diffs = df_display["Mean"] - control_mean
    hip_comparison = mean_diffs.apply(lambda x: f"{x:.1f} > {HIP:.2f}" if x > HIP else f"{x:.1f} ‚â§ {HIP:.2f}")
    hip_table = pd.DataFrame({
        "–í–∞—Ä—ñ–∞–Ω—Ç–∏": df_display["Variant"],
        "–°–µ—Ä–µ–¥–Ω—è —É—Ä–æ–∂–∞–π–Ω—ñ—Å—Ç—å, —Ü/–≥–∞": df_display["Mean"],
        "–í—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ–Ω—Ç—Ä–æ–ª—é, ¬± —Ü/–≥–∞": mean_diffs.round(1),
        "–û—Ü—ñ–Ω–∫–∞ –≤—ñ–¥–Ω–æ—Å–Ω–æ –ù–Ü–†‚ÇÄ‚ÇÖ": hip_comparison
    })

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è Markdown-–∑–≤—ñ—Ç—É
    with open(result_path, 'w', encoding='utf-8') as f:
        f.write(f"# üìä –î–∏—Å–ø–µ—Ä—Å—ñ–π–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ ‚Äî {task['name']}\n\n")

        f.write("## 1. –°–µ—Ä–µ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∞—Ö:\n\n")
        f.write(df_display[["Variant", "Sum", "Mean"]].to_markdown(index=False))
        f.write("\n\n## –°—É–º–∞ –ø–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è—Ö:\n\n")
        f.write(rep_sums_display.to_frame(name="Œ£P").to_markdown())
        f.write(f"\n\n**–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ (Œ£X):** {grand_total:.1f}  \n**–ó–∞–≥–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–Ω—î:** {grand_mean:.1f}\n\n")

        f.write("## 2. –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (X ‚àí A):\n\n")
        f.write(transformed_display.to_markdown())

        f.write("\n\n## 3. –ö–≤–∞–¥—Ä–∞—Ç–∏ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å:\n\n")
        f.write(squared_display.to_markdown())

        f.write("\n\n## 4‚Äì13. –û—Å–Ω–æ–≤–Ω—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏:\n\n")
        f.write(f"- N = {N}\n")
        f.write(f"- C = {C:.2f}\n")
        f.write(f"- Cy = {Cy:.2f}\n")
        f.write(f"- Cp = {Cp:.2f}\n")
        f.write(f"- Cv = {Cv:.2f}\n")
        f.write(f"- Cz = {Cz:.2f}\n")
        f.write(f"- vy = {vy}, vv = {vv}, vp = {vp}, vz = {vz}\n")
        f.write(f"- Sv = {Sv:.2f}, Sz = {Sz:.2f}\n")
        f.write(f"- F—Ñ = {Ff:.2f}, F—Ç = {Ft:.2f}\n")

        f.write("\n\n## 14. –¢–∞–±–ª–∏—Ü—è –¥–∏—Å–ø–µ—Ä—Å—ñ–π–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É:\n\n")
        f.write(anova_table.to_markdown(index=False))

        f.write("\n\n## 15‚Äì18. –ü–æ—Ö–∏–±–∫–∞ —Ç–∞ –≤–∏—Å–Ω–æ–≤–∫–∏:\n\n")
        f.write(f"- Sx = {Sx:.3f}  \n")
        f.write(f"- Sd = 1.41 √ó Sx = {Sd:.2f}  \n")
        f.write(f"- –ù–Ü–†‚ÇÄ‚ÇÖ = t‚ÇÄ‚ÇÖ √ó Sd = {HIP:.2f} (t‚ÇÄ‚ÇÖ = 2.26)\n\n")

        f.write("## 18. –í–∏—Å–Ω–æ–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –¥–æ—Å–ª—ñ–¥—É:\n\n")
        f.write(hip_table.to_markdown(index=False))

    print(f"‚úÖ –ó–≤—ñ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É: {result_path}")