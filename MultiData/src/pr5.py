import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt

tasks = [
    {'name': 'task1', 'filename': 'pr5_task1_data.csv'},
    {'name': 'task2', 'filename': 'pr5_task2_data.csv'},
    {'name': 'task3', 'filename': 'pr5_task3_data.csv'},
    {'name': 'task4', 'filename': 'pr5_task4_data.csv'},
    {'name': 'task5', 'filename': 'pr5_task5_data.csv'},
]

def standardize(df):
    return (df - df.mean()) / df.std()

def interpret_components(A, feature_names, top_n=2):
    interpretation = []
    for i in range(A.shape[1]):
        col = A[:, i]
        top_indices = np.argsort(np.abs(col))[::-1][:top_n]
        top_features = [feature_names[j] for j in top_indices]
        interpretation.append(f"F{i+1}: –Ω–∞–π–±—ñ–ª—å—à–µ –≤–ø–ª–∏–≤–∞—é—Ç—å {', '.join(top_features)}")
    return interpretation

def plot_scree(eigvals, task_name):
    plt.figure(figsize=(6, 4))
    plt.plot(range(1, len(eigvals)+1), eigvals, marker='o')
    plt.title(f"–ì—Ä–∞—Ñ—ñ–∫ –∫–∞–º‚Äô—è–Ω–∏—Å—Ç–æ–≥–æ –æ—Å–∏–ø—É ‚Äî {task_name}")
    plt.xlabel("–ù–æ–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏")
    plt.ylabel("–í–ª–∞—Å–Ω–µ —á–∏—Å–ª–æ")
    plt.grid(True)
    plt.tight_layout()
    plt.savefig(f"results/pr5_{task_name}_scree.png")
    plt.close()

def principal_component_analysis(df, task_name):
    Z = standardize(df)
    R = Z.corr()

    eigvals, eigvecs = np.linalg.eig(R)
    idx = eigvals.argsort()[::-1]
    eigvals = eigvals[idx]
    eigvecs = eigvecs[:, idx]

    A = eigvecs @ np.diag(np.sqrt(eigvals))
    A = np.real(A)

    F = np.array(Z @ A)
    F_df = pd.DataFrame(F, columns=[f'F{i+1}' for i in range(F.shape[1])], index=Z.index)

    # –Ü–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    component_labels = interpret_components(A, df.columns.tolist())
    plot_scree(eigvals, task_name)

    md = f"# –ü—Ä–∞–∫—Ç–∏—á–Ω–∞ —Ä–æ–±–æ—Ç–∞ 5 ‚Äî –ú–µ—Ç–æ–¥ –≥–æ–ª–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\n"
    md += f"## –ó–∞–≤–¥–∞–Ω–Ω—è: {task_name}\n\n"
    md += f"### üìä –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ\n\n```csv\n{df.to_csv(index=False)}\n```\n"
    md += f"### üìê –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–æ–≤–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è\n\n```csv\n{Z.round(3).to_csv(index=False)}\n```\n"
    md += f"### üîó –ú–∞—Ç—Ä–∏—Ü—è –∫–æ—Ä–µ–ª—è—Ü—ñ–π\n\n```csv\n{R.round(3).to_csv()}\n```\n"
    md += f"### üìà –í–ª–∞—Å–Ω—ñ —á–∏—Å–ª–∞\n\n```text\n{eigvals.round(3)}\n```\n"
    md += f"### üßÆ –ú–∞—Ç—Ä–∏—Ü—è —Ñ–∞–∫—Ç–æ—Ä–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è (A)\n\n```csv\n{pd.DataFrame(A, columns=[f'F{i+1}' for i in range(A.shape[1])], index=df.columns).round(3).to_csv()}\n```\n"
    md += "### üß† –ó–Ω–∞—á–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (F)\n\n```csv\n"
    md += F_df.round(3).to_csv(index=False, header=True)
    md += "```\n"
    md += "### üß© –Ü–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—è –≥–æ–ª–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\n"
    for label in component_labels:
        md += f"- {label}\n"
    md += f"\n![–ì—Ä–∞—Ñ—ñ–∫ –∫–∞–º‚Äô—è–Ω–∏—Å—Ç–æ–≥–æ –æ—Å–∏–ø—É](pr5_{task_name}_scree.png)\n"
    md += f"### üìå –í–∏—Å–Ω–æ–≤–∫–∏\n- –ù–∞–π–±—ñ–ª—å—à –∑–Ω–∞—á—É—â—ñ –æ–∑–Ω–∞–∫–∏ –º–∞—é—Ç—å –Ω–∞–π–±—ñ–ª—å—à—ñ –≤–∞–≥–æ–≤—ñ –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ —É –ø–µ—Ä—à–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.\n- –°—É–º–∞ –≤–ª–∞—Å–Ω–∏—Ö —á–∏—Å–µ–ª ‚âà –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–∑–Ω–∞–∫: –ø–æ—è—Å–Ω–µ–Ω–Ω—è –¥–∏—Å–ø–µ—Ä—Å—ñ—ó –ø–æ–≤–Ω–µ.\n"

    with open(f"results/pr5_{task_name}_principal-component.md", "w", encoding="utf-8") as f:
        f.write(md)

if __name__ == "__main__":
    os.makedirs("results", exist_ok=True)
    for task in tasks:
        df = pd.read_csv(f"data/{task['filename']}")
        df_numeric = df.drop(columns=[df.columns[0]])
        principal_component_analysis(df_numeric, task['name'])